---
- name: "WEB"
  hosts: web1
  tasks:
  - name: DOMAIN_JOIN_WEB1
    win_domain_membership:
      dns_domain_name: http.lan
      hostname: web1
      domain_admin_user: Administrator@http.lan
      domain_admin_password: Admin123
      state: domain
    register: domain_member
  - name: REBOOT_WEB1
    win_reboot:
    when: domain_member.reboot_required
  
- name: DC1_CA
  hosts: dc1
  become: yes
  become_method: runas
  vars:
    ansible_become_user: HTTP\Administrator
    ansible_become_password: Admin123
  tasks:
  - name: Install feature
    win_feature:
      name: AD-Certificate
      include_sub_features: true
      state: present
      include_management_tools: true
#  - win_shell: |
#      Install-AdcsCertificationAuthority -CACommonName dc-http-ca -CAType EnterpriseRootCA -HashAlgorithmName SHA256 -KeyLength 4096 -ValidityPeriod Years -ValidityPeriodUnits 5 -Force


- name: "WEB2"
  hosts: web2
  tasks:
  - name: "DOMAIN_JOIN_WEB2"
    win_domain_membership:
      dns_domain_name: http.lan
      hostname: web2
      domain_admin_user: Administrator@http.lan
      domain_admin_password: Admin123
      state: domain
    register: domain_member
  - name: "REBOOT_WEB2"
    win_reboot:
    when: domain_member.reboot_required

- name: WEB1_SETUP
  hosts: web1
  become: yes
  become_method: runas
  vars:
    ansible_become_user: HTTP\Administrator
    ansible_become_password: Admin123
  tasks:
  - name: IIS_INSTALL
    win_feature:
      name: Web-Server
      include_sub_features: true
      include_management_tools: true
      state: present
  - win_reboot:
  - name: Creating and running certreq script
    win_shell: |
      mkdir C:\certs
      cd C:\certs
      echo '$WebsiteName = "web.http.lan"' >> cucc.ps1
      echo '$HostHeader = "web.http.lan"' >> cucc.ps1
      echo '$ReqFile = "Cert_Req-$WebsiteName-" + "$Date" + ".req"' >> cucc.ps1
      echo '$InfFile = @"' >> cucc.ps1
      echo '    [NewRequest]`r' >> cucc.ps1
      echo '    Subject = "CN=$HostHeader"`r' >> cucc.ps1
      echo '    KeySpec = 1' >> cucc.ps1
      echo '    KeyLength = 2048' >> cucc.ps1
      echo '    Exportable = TRUE`r' >> cucc.ps1
      echo '    RequestType = CMC`r' >> cucc.ps1
      echo '    [RequestAttributes]' >> cucc.ps1
      echo '    CertificateTemplate= WebServer' >> cucc.ps1
      echo '    [Extensions]' >> cucc.ps1
      echo '    2.5.29.17 = "{text}" ; SAN - Subject Alternative Name' >> cucc.ps1
      echo '    _continue_ = "dns=web.http.lan&"' >> cucc.ps1
      echo '"@' >> cucc.ps1
      echo 'Write-Host "Generating Certificate Request file..." -ForegroundColor Yellow;' >> cucc.ps1
      echo '$FinalInfFile = "Cert_Req_Inf-WebsiteName-" + "$Date" + ".inf"' >> cucc.ps1
      echo 'New-Item $FinalInfFile -type file -value $InfFile' >> cucc.ps1
      echo 'cmd /c "certreq -new $FinalInfFile $ReqFile"' >> cucc.ps1
      echo 'Write-Host " "' >> cucc.ps1
      echo 'Write-Host "Certificate request file for $WebsiteName successfully generated!" -foregroundcolor DarkGreen;' >> cucc.ps1
      echo '$id = certreq.exe -config "dc1.http.lan\dc-http-ca" -submit .\Cert_Req-web.http.lan-.req tomi.cer' >> cucc.ps1
      echo '$id = (($id -replace "[^0-9]" , "") -split "\n")[0]' >> cucc.ps1
      echo 'certreq -q -f -config "dc1.http.lan\dc-http-ca" -retrieve $id tomi.cer' >> cucc.ps1
      echo '$thumb = certreq -accept tomi.cer' >> cucc.ps1
      echo '$thumb = $thumb.Split("`r`n")[5].TrimStart("  Thumbprint: ")' >> cucc.ps1
      echo 'New-IISSiteBinding -Name "Default Web Site" -BindingInformation "*:443:web.http.lan" -CertificateThumbprint $thumb -CertStoreLocation "Cert:\LocalMachine\My" -Protocol https -Force' >> cucc.ps1
      .\cucc.ps1
  - name: "DOWNLOAD_WEB-DEPLOY"
    win_get_url:
      url: https://download.microsoft.com/download/0/1/D/01DC28EA-638C-4A22-A57B-4CEF97755C6C/WebDeploy_amd64_en-US.msi
      dest: C:\msdeploy.msi
  - name: "INSTALL_WEB-DEPLOY"
    win_shell: |
        Start-Process msiexec.exe -Wait -ArgumentList '/I C:\msdeploy.msi ADDLOCAL=ALL'

- name: WEB2_SETUP
  hosts: web2
  become: yes
  become_method: runas
  vars:
    ansible_become_user: HTTP\Administrator
    ansible_become_password: Admin123
  tasks:
  - name: "IIS_INSTALL"
    win_feature:
      name: Web-Server
      include_sub_features: true
      include_management_tools: true
      state: present
  - win_reboot:
  - name: Creating certreq script
    win_shell: |
      mkdir C:\certs
      cd C:\certs
      echo '$WebsiteName = "web.http.lan"' >> cucc.ps1
      echo '$HostHeader = "web.http.lan"' >> cucc.ps1
      echo '$ReqFile = "Cert_Req-$WebsiteName-" + "$Date" + ".req"' >> cucc.ps1
      echo '$InfFile = @"' >> cucc.ps1
      echo '    [NewRequest]`r' >> cucc.ps1
      echo '    Subject = "CN=$HostHeader"`r' >> cucc.ps1
      echo '    KeySpec = 1' >> cucc.ps1
      echo '    KeyLength = 2048' >> cucc.ps1
      echo '    Exportable = TRUE`r' >> cucc.ps1
      echo '    RequestType = CMC`r' >> cucc.ps1
      echo '    [RequestAttributes]' >> cucc.ps1
      echo '    CertificateTemplate= WebServer' >> cucc.ps1
      echo '    [Extensions]' >> cucc.ps1
      echo '    2.5.29.17 = "{text}" ; SAN - Subject Alternative Name' >> cucc.ps1
      echo '    _continue_ = "dns=web.http.lan&"' >> cucc.ps1
      echo '"@' >> cucc.ps1
      echo 'Write-Host "Generating Certificate Request file..." -ForegroundColor Yellow;' >> cucc.ps1
      echo '$FinalInfFile = "Cert_Req_Inf-WebsiteName-" + "$Date" + ".inf"' >> cucc.ps1
      echo 'New-Item $FinalInfFile -type file -value $InfFile' >> cucc.ps1
      echo 'cmd /c "certreq -new $FinalInfFile $ReqFile"' >> cucc.ps1
      echo 'Write-Host " "' >> cucc.ps1
      echo 'Write-Host "Certificate request file for $WebsiteName successfully generated!" -foregroundcolor DarkGreen;' >> cucc.ps1
      echo '$id = certreq.exe -config "dc1.http.lan\dc-http-ca" -submit .\Cert_Req-web.http.lan-.req tomi.cer' >> cucc.ps1
      echo '$id = (($id -replace "[^0-9]" , "") -split "\n")[0]' >> cucc.ps1
      echo 'certreq -q -f -config "dc1.http.lan\dc-http-ca" -retrieve $id tomi.cer' >> cucc.ps1
      .\cucc.ps1
  - name: "DOWNLOAD_WEB-DEPLOY"
    win_get_url:
      url: https://download.microsoft.com/download/0/1/D/01DC28EA-638C-4A22-A57B-4CEF97755C6C/WebDeploy_amd64_en-US.msi
      dest: C:\msdeploy.msi
  - name: "INSTALL_WEB-DEPLOY"
    win_shell: |
        Start-Process msiexec.exe -Wait -ArgumentList '/I C:\msdeploy.msi ADDLOCAL=ALL'
  - name: "CONFIG_PULL_FROM_WEB1"
    win_shell: |
        cd "C:\Program Files\IIS\Microsoft Web Deploy V3"
        .\msdeploy.exe -verb:sync -source:metakey=lm/w3svc/1,computername=web1 -dest:metakey=lm/w3svc/1
  - name: "INSTALL_NLB"
    win_feature:
      name: NLB
      include_sub_features: true
      state: present
  - name: "INSTALL_RSAT-NLB"
    win_feature:
      name: RSAT-NLB
      include_sub_feautres: true
      state: present
  - name: "CREATE_NLB-Cluster"
    win_shell: |
        Import-Module NetworkLoadBalancingClusters
        New-NLBCluster -Interface "HTTP" -OperationMode Multicast -ClusterPrimaryIP 10.10.10.250 -ClusterName IIScluster
- name: ADD_WEB1_TO_CLUSTER(on1)
  hosts: web1
  become: yes
  become_method: runas
  vars:
    ansible_become_user: Administrator
    ansible_become_password: Admin123
  tasks:
  - win_feature:
      name: NLB
      include_sub_feautres: true
      state: present
      include_management_tools: true
    register: nlbrestart
  - win_reboot: 
    when: nlbrestart.reboot_required
- name: ADD_WEB1_TO_CLUSTER(on2)
  hosts: web2
  become: yes
  become_method: runas
  vars:
    ansible_become_user: Administrator
    ansible_become_password: Admin123
  tasks:
  - win_shell: |
        Import-Module NetworkLoadBalancingClusters
        Add-NlbClusterNode -InterfaceName "HTTP" -NewNodeName "web1" -NewNodeInterface "HTTP"